# Default values for $repo-name$.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: poc-conflate
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.0-SNAPSHOT"
  test:
    repository: poc-conflate-test-container

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {
  "prometheus.io/scrape": "true",
  "prometheus.io/port": "1234"
}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

container:
  configuration:
    httpServerPort: 80


kafka:
  enabled: true
  nameOverride: poc-kafka
  service:
    type: LoadBalancer
  externalAccess:
    enabled: true
    service:
      ports:
        external: 9096
      loadBalancerIPs:
        - localhost
  provisioning:
    enabled: true
    topics:
      - name: 'rtt.inbound.mappings'
        partitions: 10
        replicationFactor: 1
        config:
          retention.ms: 900000
          segment.ms: 900000
      - name: 'exchange.outbound'
        partitions: 10
        replicationFactor: 1
        config:
          retention.ms: 900000
          segment.ms: 900000
  metrics:
    kafka:
      enabled: true
  zookeeper:
    nameOverride: poc-zookeeper
    service:
      type: LoadBalancer